// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/token/contracts.go
//
// Generated by this command:
//
//	mockgen -source=internal/pkg/token/contracts.go -destination=test/mocks/mock_token.go -package=mocks -mock_names=Service=MockTokenService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	token "task-trail/internal/pkg/token"

	gomock "go.uber.org/mock/gomock"
)

// MockTokenService is a mock of Service interface.
type MockTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockTokenServiceMockRecorder
	isgomock struct{}
}

// MockTokenServiceMockRecorder is the mock recorder for MockTokenService.
type MockTokenServiceMockRecorder struct {
	mock *MockTokenService
}

// NewMockTokenService creates a new mock instance.
func NewMockTokenService(ctrl *gomock.Controller) *MockTokenService {
	mock := &MockTokenService{ctrl: ctrl}
	mock.recorder = &MockTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenService) EXPECT() *MockTokenServiceMockRecorder {
	return m.recorder
}

// GenAccessToken mocks base method.
func (m *MockTokenService) GenAccessToken(userId int) (*token.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenAccessToken", userId)
	ret0, _ := ret[0].(*token.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenAccessToken indicates an expected call of GenAccessToken.
func (mr *MockTokenServiceMockRecorder) GenAccessToken(userId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenAccessToken", reflect.TypeOf((*MockTokenService)(nil).GenAccessToken), userId)
}

// GenRefreshToken mocks base method.
func (m *MockTokenService) GenRefreshToken(userId int) (*token.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenRefreshToken", userId)
	ret0, _ := ret[0].(*token.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenRefreshToken indicates an expected call of GenRefreshToken.
func (mr *MockTokenServiceMockRecorder) GenRefreshToken(userId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenRefreshToken", reflect.TypeOf((*MockTokenService)(nil).GenRefreshToken), userId)
}

// VerifyAccessToken mocks base method.
func (m *MockTokenService) VerifyAccessToken(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyAccessToken", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyAccessToken indicates an expected call of VerifyAccessToken.
func (mr *MockTokenServiceMockRecorder) VerifyAccessToken(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyAccessToken", reflect.TypeOf((*MockTokenService)(nil).VerifyAccessToken), arg0)
}

// VerifyRefreshToken mocks base method.
func (m *MockTokenService) VerifyRefreshToken(arg0 string) (int, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyRefreshToken", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// VerifyRefreshToken indicates an expected call of VerifyRefreshToken.
func (mr *MockTokenServiceMockRecorder) VerifyRefreshToken(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyRefreshToken", reflect.TypeOf((*MockTokenService)(nil).VerifyRefreshToken), arg0)
}
